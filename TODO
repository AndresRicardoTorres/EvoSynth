Aus Weickers Buch (noch) nicht implementiert:

Rekombinationen:
	- ARITHMETISCHER-CROSSOVER (Seite 83)

Mutationen:
	- DREIERTAUSCH-MUTATION (Seite 107)
	- INVERTIERENDE-MUTATION (Seite ???)
	- SELBSTADAPTIVE-GAUSS-MUTATION (Seite 114)

Anpassungsstrategien:
	- VORDEFINIERTE-ANPASSUNG (Seite 111)
	- ADAPTIVE-ANPASSUNG (Seite 113)

------------------------------------------------

Wahrscheinlich sollte RSpec durch shoulda ersetzt werden!
(siehe ruby 1.9 buch)

------------------------------------------------

class University < Struct.new(:name, :address)
  def to_s
    name
  end
end

Struct erstellt getter und setter!

------------------------------------------------

"{#foo} blabla {#bar}" ist besser als to_s bullshit!!

------------------------------------------------

contextr wirkt etwas überzogen und ohne sinn für mich,
vielleicht aber doch? nochmal über verwendungsmölichkeiten
nachdenken, insgesamt isses ja recht praktische für
ausgaben zum bleistift!

-----------------------------------------------

für mockups:

http://flexmock.rubyforge.org/
http://mocha.rubyforge.org/
http://github.com/notahat/machinist

-----------------------------------------------

RSPEC: tests umstellen

http://rspec.info/documentation/
http://charlesmaxwood.com/rspec-vs-testunit/

-----------------------------------------------

(18:37:59) yves: vielleicht sollte ich die möglichkeiten von ruby auch
so nutzen und sowas machen:
evolution do
	population is
		Population.new(foo)
	end
	mutation is
		bar
	end
end
(18:39:04) Manuel Unglaub: sieht gut lesbar aus
(18:39:53) yves: muss ich mir vielleicht wirklich mal gedanken drüber machen

-----------------------------------------------

(18:44:42) yves: EvoSynth - dynamisch, specification driven, aspect
oriented framework for rapid prototyping of evolutionary algorithms :D
(18:45:01) Manuel Unglaub: agile development hast du vergessen
(18:45:08) yves: und extreme

-----------------------------------------------

Aspekte für callbacks und so?
http://www.ironicwolf.com/2009/04/aspect-the-ruby-way/

