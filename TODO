============================== generelles ======================================

			!!! Jeden morgen ein paar sachen Dokumentieren !!!


mit Prof. Weicker klären:

	- childfactor durch genaue anzahl (lambda) ersetzen oder eher nicht?
		=> childfactor für alle algorithmen! (anzahl kinder blabla)
	- was ist mit pheno/genetyp? reichen decoder oder sollte explizite
	  unterscheidung gemacht werden? Eventuell mit Prof. Weicker diskutieren

fehlende oder fehlerhafte Testfälle:

	- EvoSynth::Evolvers::LocalSearch::HillclimberAcceptance
	- EvoSynth::Evolvers::LocalSearch::SimulatedAnnealingAcceptance
	- EvoSynth::Evolvers::LocalSearch::ThresholdAcceptance
	- EvoSynth::Evolvers::LocalSearch::GreatDelugeAcceptance
	- EvoSynth::Evolvers::LocalSearch::RecordToRecordTravelAcceptance
	- EvoSynth::Mutations::SelfAdaptiveGaussMutation

============================== EvoSynth 0.1 ====================================

Features:

	- Mehrpopulationsprobleme:
		=> paper mit P-modell endlich mal umsetzen, das ist irgendwie vernachlässigt worden

	- Evolutionäres Programmieren & Genetisches Programmieren (Weicker page 139--154)
		-> Gentische Programmierung (Ruby programme wären schön)

	- Beispiele:
		=> Ant mutation fixen und Ant example überarbeiten
		=> wenigstens ein Beispiel zur Mehrzieloptimierung

	- Versuchspläne und Statistiken?!

============================== EvoSynth >0.1 ===================================

Features:

	- add # encoding: utf-8 to all ruby files

	- TSP Problem generischer machen und refactorisieren

	- Benchmarkfunktionen:
		-> C-Funktion (Weicker page 272)
		-> sämtliche mit Randbedingungen (Weicker page 274)

	- Decoder/Encoder:
		=> RealToBinary, IntegerToBinary, BinaryToInteger

	- Algorithmen:
		=> Schwärme
		=> neuronale Netze

	- Mehrzieloptimierung?

	- meta-evolver:
		=> was ist mit hall-of-fame oder ähnlichem?

	- BinaryGenome mittels inline C optimieren

	- nicht reelwertige Fitnesswerte?! Da fehlt nicht viel, aber zum Beispiel
	  die Fitnessproportionale Selektion braucht die (einfach nach ".fitness" suchen)

	- Codegenerator System (z.b. für OpenBEALE und EO) -> siehe fehler!

	- Checkpointing für Evolver, Save, Stop, Restart, Continue
		=> eventuell mit Logger verknüppern

	- EvoBench: Benchmark für Evolutionäre Algorithmen
		=> mutationen, selektionen und co
		=> diversität und co

	- Mehrpopulationsprobleme:
		=> was ist da noch sinnvoll? inseln & migration?

	- Logger:
		=> html output templates, svg outputs?
		=> logger sollte auch bei fitnessänderungen (der population?) getriggert werden können,
		   das geht aber vielleicht eher in richtung eventsystem

	- Bootstrap zeugs, inspiriert von OpenBEAGLE (initializer)
		=> braucht man das wirklich?
		=> Breeder klingt am besten (siehe ECJ)
		=> variable anzahl an eltern, kindern für recombinationen (siehe EO paper)